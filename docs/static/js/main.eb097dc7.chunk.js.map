{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","objeto","setObjeto","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEZd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAEzBC,EAFyB,KAyBxC,OAlBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAU,CACNf,KAAMkB,EACNL,SAAS,MAGd,UAGZ,CAACpB,IAGGqB,EDtBuBM,CAAc3B,GAA/ByB,EAHsB,EAG5BlB,KAAYa,EAHgB,EAGhBA,QAGnB,OACI,qCACI,6BAAKpB,IAEHoB,GAAW,mBAAGJ,UAAU,mCAAb,uBAEb,qBAAKA,UAAU,YAAf,SAEYS,EAAKhB,KAAK,SAACC,GAAD,OACN,cAAC,EAAD,eAESA,GADAA,EAAIC,aEhB5BiB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,aAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAc9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACM4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCxB7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eb097dc7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    // Funcion para Actualizar el inputValue \r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categorias => [inputValue, ...categorias]);\r\n            setInputValue(' ');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />  \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=vLTEqvxSKSnXMucH7uA8poWmN5y9XrEq`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={url} alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data: imgs, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className='animate__animated animate__jello'>Loading..</p> }\r\n\r\n            <div className='card-grid'>\r\n                    {\r\n                        imgs.map( (img) => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../components/helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [objeto, setObjeto] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n                    \r\n                    setObjeto({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 1000 );\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return objeto; // {data: [], loading: true};\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Valorant']);\r\n    \r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'Naruto']); -> una opciÃ³n\r\n\r\n    //     setCategories(categorias => [...categorias, 'Boruto']);\r\n    // }\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                { categories.map(category => \r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category} \r\n                    />)\r\n                }\r\n\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}